# Generated by Django 3.1.4 on 2021-10-21 16:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('db_models', '0014_upload_package_history_package_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClusterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='软删除')),
                ('cluster_service_name', models.CharField(blank=True, help_text='集群所属服务', max_length=36, null=True, verbose_name='集群所属服务')),
                ('cluster_type', models.CharField(blank=True, help_text='集群类型', max_length=36, null=True, verbose_name='集群类型')),
                ('cluster_name', models.CharField(help_text='集群名称', max_length=64, verbose_name='集群名称')),
                ('connect_info', models.CharField(blank=True, help_text='集群连接信息', max_length=512, null=True, verbose_name='集群连接信息')),
                ('connect_info_parse_type', models.CharField(blank=True, help_text='连接信息解析方式', max_length=32, null=True, verbose_name='连接信息解析方式')),
            ],
            options={
                'verbose_name': '集群信息表',
                'verbose_name_plural': '集群信息表',
                'db_table': 'omp_cluster_info',
            },
        ),
        migrations.CreateModel(
            name='MainInstallHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('operation_uuid', models.CharField(help_text='部署操作uuid', max_length=36, verbose_name='部署操作uuid')),
                ('install_status', models.IntegerField(choices=[(0, '待安装'), (1, '安装中'), (2, '安装成功'), (3, '安装失败')], default=0, help_text='安装状态', verbose_name='安装状态')),
                ('install_args', models.JSONField()),
                ('install_log', models.TextField(help_text='MAIN安装日志', verbose_name='MAIN安装日志')),
            ],
            options={
                'verbose_name': '主安装记录表',
                'verbose_name_plural': '主安装记录表',
                'db_table': 'omp_main_install_history',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('ip', models.GenericIPAddressField(help_text='服务所在主机', verbose_name='服务所在主机')),
                ('service_instance_name', models.CharField(help_text='服务实例名称', max_length=64, verbose_name='服务实例名称')),
                ('product_name', models.CharField(blank=True, help_text='应用名称', max_length=64, null=True, verbose_name='应用名称')),
                ('service_port', models.TextField(blank=True, help_text='服务端口', null=True, verbose_name='服务端口')),
                ('service_controllers', models.JSONField(blank=True, help_text='服务控制脚本', null=True, verbose_name='服务控制脚本')),
                ('service_role', models.CharField(blank=True, help_text='服务角色', max_length=128, null=True, verbose_name='服务角色')),
                ('service_status', models.IntegerField(choices=[(0, '正常'), (1, '启动中'), (2, '停止中'), (3, '重启中'), (4, '停止'), (5, '未知'), (6, '安装中'), (7, '安装失败')], default=5, help_text='服务状态', verbose_name='服务状态')),
                ('alert_count', models.IntegerField(default=0, help_text='告警次数', verbose_name='告警次数')),
                ('self_healing_count', models.IntegerField(default=0, help_text='服务自愈次数', verbose_name='服务自愈次数')),
                ('cluster', models.ForeignKey(blank=True, help_text='所属集群', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.clusterinfo')),
                ('env', models.ForeignKey(blank=True, help_text='所属环境', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env')),
                ('product', models.ForeignKey(blank=True, help_text='产品表外键', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.producthub')),
                ('service', models.ForeignKey(blank=True, help_text='服务表外键', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.applicationhub')),
            ],
            options={
                'verbose_name': '服务实例表',
                'verbose_name_plural': '服务实例表',
                'db_table': 'omp_service',
            },
        ),
        migrations.CreateModel(
            name='ServiceConnectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('service_name', models.CharField(help_text='服务名', max_length=32, verbose_name='服务名')),
                ('service_username', models.CharField(blank=True, help_text='用户名', max_length=512, null=True, verbose_name='用户名')),
                ('service_password', models.CharField(blank=True, help_text='密码', max_length=512, null=True, verbose_name='密码')),
                ('service_username_enc', models.CharField(blank=True, help_text='加密用户名', max_length=512, null=True, verbose_name='加密用户名')),
                ('service_password_enc', models.CharField(blank=True, help_text='加密密码', max_length=512, null=True, verbose_name='加密密码')),
            ],
            options={
                'verbose_name': '用户名密码信息表',
                'verbose_name_plural': '用户名密码信息表',
                'db_table': 'omp_service_connect_info',
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='操作用户', max_length=128, verbose_name='操作用户')),
                ('description', models.CharField(help_text='用户行为描述', max_length=1024, verbose_name='用户行为描述')),
                ('result', models.CharField(default='success', help_text='操作结果', max_length=1024, verbose_name='操作结果')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='发生时间', null=True, verbose_name='发生时间')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.service', verbose_name='服务')),
            ],
            options={
                'verbose_name': '服务操作记录',
                'verbose_name_plural': '服务操作记录',
                'db_table': 'omp_service_operate_log',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_connect_info',
            field=models.ForeignKey(blank=True, help_text='用户名密码信息', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.serviceconnectinfo'),
        ),
        migrations.CreateModel(
            name='DetailInstallHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('install_step_status', models.IntegerField(choices=[(0, '待安装'), (1, '安装中'), (2, '安装成功'), (3, '安装失败')], default=0, help_text='安装步骤状态', verbose_name='安装步骤状态')),
                ('send_flag', models.IntegerField(default=0, help_text='0-待发送 1-发送中 2-发送成功 3-发送失败', verbose_name='发包状态')),
                ('send_msg', models.TextField(help_text='发包日志', verbose_name='发包日志')),
                ('unzip_flag', models.IntegerField(default=0, help_text='0-待解压 1-解压中 2-解压成功 3-解压失败', verbose_name='解压包状态')),
                ('unzip_msg', models.TextField(help_text='解压日志', verbose_name='解压日志')),
                ('install_flag', models.IntegerField(default=0, help_text='0-待安装 1-安装中 2-安装成功 3-安装失败', verbose_name='安装执行状态')),
                ('install_msg', models.TextField(help_text='安装日志', verbose_name='安装日志')),
                ('init_flag', models.IntegerField(default=0, help_text='0-待初始化 1-初始化中 2-初始化成功 3-初始化失败', verbose_name='初始化执行状态')),
                ('init_msg', models.TextField(help_text='初始化日志', verbose_name='初始化日志')),
                ('start_flag', models.IntegerField(default=0, help_text='0-待启动 1-启动中 2-启动成功 3-启动失败', verbose_name='启动执行状态')),
                ('start_msg', models.TextField(help_text='启动日志', verbose_name='启动日志')),
                ('main_install_history', models.ForeignKey(blank=True, help_text='关联主安装记录', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.maininstallhistory')),
                ('service', models.ForeignKey(blank=True, help_text='关联服务对象', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.service')),
            ],
            options={
                'verbose_name': '安装记录详情表',
                'verbose_name_plural': '安装记录详情表',
                'db_table': 'omp_detail_install_history',
            },
        ),
        migrations.AddField(
            model_name='clusterinfo',
            name='service_connect_info',
            field=models.ForeignKey(blank=True, help_text='用户名密码信息', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.serviceconnectinfo'),
        ),
    ]
